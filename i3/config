set $mod Mod4

font pango:Cascadia Code NF 14

exec --no-startup-id dex-autostart --autostart --environment i3
exec --no-startup-id picom -b &
exec --no-startup-id pasystray &
exec --no-startup-id ibus-daemon -rxRd &
exec --no-startup-id nm-applet &
exec --no-startup-id nitrogen --restore &
exec --no-startup-id glava --desktop &


popup_during_fullscreen smart
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set 5%+
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86Search exec bemenu-run
# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod
focus_follows_mouse no

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag titlebar

# start a terminal
bindsym $mod+Return exec alacritty

# kill focused window
bindsym $mod+Shift+q kill
# start dmenu (a program launcher)
# A more modern dmenu replacement is rofi:
bindcode $mod+40 exec "rofi -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
bindsym $mod+x exec "rofi -show power-menu -modi 'power-menu:~/.local/bin/rofi-power-menu --choices=reboot/shutdown/suspend/logout'"
bindsym $mod+Shift+s exec gnome-screenshot -c -i
bindsym $mod+Shift+d exec "rofi -show run"

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+n split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
    bindsym $mod+exclam workspace number 1
    bindsym $mod+dollar workspace number 2
    bindsym $mod+braceleft workspace number 3
    bindsym $mod+braceright workspace number 4
    bindsym $mod+percent workspace number 5
    bindsym $mod+asciicircum workspace number 6
    bindsym $mod+plus workspace number 7
    bindsym $mod+asterisk workspace number 8
    bindsym $mod+parenleft workspace number 9
    bindsym $mod+parenright workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+exclam move container to workspace number 1
    bindsym $mod+Shift+dollar move container to workspace number 2
    bindsym $mod+Shift+braceleft move container to workspace number 3
    bindsym $mod+Shift+braceright move container to workspace number 4
    bindsym $mod+Shift+percent move container to workspace number 5
    bindsym $mod+Shift+asciicircum move container to workspace number 6
    bindsym $mod+Shift+plus move container to workspace number 7
    bindsym $mod+Shift+asterisk move container to workspace number 8
    bindsym $mod+Shift+parenleft move container to workspace number 9
    bindsym $mod+Shift+parenright move container to workspace number 10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 5 px or 5 ppt
        bindsym j resize grow height 5 px or 5 ppt
        bindsym k resize shrink height 5 px or 5 ppt
        bindsym l resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 5 px or 5 ppt
        bindsym Down resize grow height 5 px or 5 ppt
        bindsym Up resize shrink height 5 px or 5 ppt
        bindsym Right resize grow width 5 px or 5 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"
set $rosewater #f5e0dc
set $flamingo #f2cdcd
set $pink #f5c2e7
set $mauve #cba6f7
set $red #f38ba8
set $maroon #eba0ac
set $peach #fab387
set $yellow #f9e2af
set $green #a6e3a1
set $teal #94e2d5
set $sky #89dceb
set $sapphire #74c7ec
set $blue #89b4fa
set $lavender #b4befe
set $text #cdd6f4
set $subtext1 #bac2de
set $subtext0 #a6adc8
set $overlay2 #9399b2
set $overlay1 #7f849c
set $overlay0 #6c7086
set $surface2 #585b70
set $surface1 #45475a
set $surface0 #313244
set $base #1e1e2e
set $mantle #181825
set $crust #11111b
# Teming border and Windows --------------
# class                 border  bground text    indicator child_border
# target                 title     bg    text   indicator  border
client.focused           $lavender $base $text  $rosewater $lavender
client.focused_inactive  $overlay0 $base $text  $rosewater $overlay0
client.unfocused         $overlay0 $base $text  $rosewater $overlay0
client.urgent            $peach    $base $peach $overlay0  $peach
client.placeholder       $overlay0 $base $text  $overlay0  $overlay0
client.background        $base

bar {
  mode hide
  hidden_state hide
  position top
  colors {
    background         #1e1e2eAB
    statusline         #cdd6f4
    focused_statusline $text
    focused_separator  $base

    # target           border bg        text
    focused_workspace  $base  $mauve    $crust
    active_workspace   $base  $surface2 $text
    inactive_workspace $base  $base     $text
    urgent_workspace   $base  $red      $crust  
  }
  status_command i3status 
  i3bar_command i3bar --transparency
}
default_border pixel 2
default_floating_border pixel 2
# default gaps
gaps inner 0
gaps outer 0

# gaps
set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 2
        bindsym minus gaps outer current minus 2
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 2
        bindsym Shift+minus gaps outer all minus 2
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 2
        bindsym minus gaps inner current minus 2
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 2
        bindsym Shift+minus gaps inner all minus 2
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 2
        bindsym minus gaps horizontal current minus 2
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 2
        bindsym Shift+minus gaps horizontal all minus 2
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 2
        bindsym minus gaps vertical current minus 2
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 2
        bindsym Shift+minus gaps vertical all minus 2
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 2
        bindsym minus gaps top current minus 2
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 2
        bindsym Shift+minus gaps top all minus 2
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 2
        bindsym minus gaps right current minus 2
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 2
        bindsym Shift+minus gaps right all minus 2
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 2
        bindsym minus gaps bottom current minus 2
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 2
        bindsym Shift+minus gaps bottom all minus 2
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 2
        bindsym minus gaps left current minus 2
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 2
        bindsym Shift+minus gaps left all minus 2
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}


